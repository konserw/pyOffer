name: windows
on: [push]
jobs:
# lint job
  lint:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=forms,resources
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=forms,resources
  # Test job
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-html
      - name: Test with pytest
        continue-on-error: true  # temp workaround for problem with reporting good runs as failed
        env:
          QT_DEBUG_PLUGINS: 1
        run: |
          mkdir test_report
          pytest --html=test_report/all.html --self-contained-html tests/
          pytest --html=test_report/e2e.html --self-contained-html tests/ --e2e
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: test_report
          path: test_report
# Build installer job
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build installer
      run: python setup.py bdist_msi --target-name pyOffer.msi
    - name: Upload build
      uses: actions/upload-artifact@master
      with:
        name: pyOffer_build
        path: build/exe.win-amd64-3.8
    - name: Upload installer
      uses: actions/upload-artifact@master
      with:
        name: pyOffer_installer
        path: dist/pyOffer.msi
