name: windows
on: [push]
jobs:
# lint job
  lint:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=forms,resources
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=forms,resources
# Test job
  test:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coveralls coverage
    - name: Prepare for test
      run: |
        docker run --experimental --platform linux --rm -d --name postgres -e POSTGRES_PASSWORD=docker -e POSTGRES_DB=koferta_test -p 5432:5432 -v $GITHUB_WORKSPACE/db-setup:/docker-entrypoint-initdb.d postgres
    - name: Test with pytest and test db
      env:
        QT_DEBUG_PLUGINS: 1
      run: |
        coverage run -m pytest
    - name: Publish coverage report
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        if [[ -z "${COVERALLS_REPO_TOKEN}" ]]; then
          echo "skipping publication of coverage report due to empty token"
        else
          coveralls
        fi
    - name: Cleanup
      if: always()
      run: |
        echo "stopping test database container"
        docker stop postgres
